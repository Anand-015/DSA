#include <stdio.h>

#define MAX 10

int queue[MAX];

int front = -1, rear = -1;

int visited[MAX];

void enqueue(int v) {

 if (rear == MAX - 1)

 printf("Queue Overflow\n");

 else {

 if (front == -1)

 front = 0;

 rear++;

 queue[rear] = v;

 }

}

int dequeue() {

 int v;

 if (front == -1 || front > rear)

 return -1;

 else {

 v = queue[front];

 front++;

 return v;

 }

}

void bfs(int adj[MAX][MAX], int n, int start) {

 int i, v;

 for (i = 0; i < n; i++)

 visited[i] = 0;

 enqueue(start);

 visited[start] = 1;

 printf("\nBFS Traversal: ");

 while (front <= rear) {

 v = dequeue();

 printf("%d ", v);

 for (i = 0; i < n; i++) {

 if (adj[v][i] == 1 && visited[i] == 0) {

 enqueue(i);

 visited[i] = 1;

 }

 }

 }

 printf("\n");
}

int main() {

 int n, adj[MAX][MAX], start;

 int i, j;

 printf("Enter number of vertices: ");

 scanf("%d", &n);

 printf("Enter adjacency matrix:\n");

 for (i = 0; i < n; i++) {

 for (j = 0; j < n; j++) {

 scanf("%d", &adj[i][j]);

 }

 }

 printf("Enter starting vertex (0 to %d): ", n - 1);

 scanf("%d", &start);

 bfs(adj, n, start);

 return 0;

}
